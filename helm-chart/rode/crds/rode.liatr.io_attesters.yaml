
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: attesters.rode.liatr.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Policy")].status
    name: Policy
    type: string
  - JSONPath: .status.conditions[?(@.type=="Key")].status
    name: Key
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: rode.liatr.io
  names:
    kind: Attester
    listKind: AttesterList
    plural: attesters
    singular: attester
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Attester is the Schema for the attesters API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: AttesterSpec defines the desired state of Attester
          properties:
            policy:
              description: Policy defines the Rego policy that the attester will attest
                adherance to.
              type: string
          required:
          - policy
          type: object
        status:
          description: AttesterStatus defines the observed state of Attester
          properties:
            conditions:
              items:
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            pgpSecret:
              description: PgpSecret defines the name of the secret to use for signing.
                If the secret doesn't already exist it will be created.
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
